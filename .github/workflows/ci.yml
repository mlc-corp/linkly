name: CI monorepo — Pruebas unitarias

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # 1) Detectar qué carpetas cambiaron
  changed:
    name: Detectar cambios
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      ms_admin: ${{ steps.filter.outputs.ms_admin }}
      ms_redirect: ${{ steps.filter.outputs.ms_redirect }}
    steps:
      - name: Checkout (full history for diff)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          base: ${{ github.event_name == 'push' && github.event.before || '' }}
          ref:  ${{ github.event_name == 'push' && github.sha || '' }}

          filters: |
            frontend:
              - 'frontend/**'
            ms_admin:
              - 'ms-admin/**'
            ms_redirect:
              - 'ms-redirect/**'

  # 2) Pruebas unitarias — frontend
  test-frontend:
    name: Pruebas unitarias · frontend
    needs: changed
    if: needs.changed.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            frontend/requirements.txt
            frontend/requirements-dev.txt
            frontend/pyproject.toml
            frontend/setup.cfg
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Black (check)
        run: |
          black --check app.py routes services
      - name: Flake8 (selective paths)
        run: |
          flake8 app.py routes services
      - name: Run unit tests (con coverage para Sonar)
        env:
          PYTHONPATH: ${{ github.workspace }}/frontend
        run: |
          pytest tests/unit/
      - name: Sonar Scan (frontend)
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectBaseDir=${{ github.workspace }}/frontend

  # 3) Pruebas unitarias — ms-admin
  test-ms-admin:
    name: Pruebas unitarias · ms-admin
    needs: changed
    if: needs.changed.outputs.ms_admin == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ms-admin
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            ms-admin/requirements.txt
            ms-admin/requirements-dev.txt
            ms-admin/pyproject.toml
            ms-admin/setup.cfg
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Black (check)
        run: |
          black --check app
      - name: Flake8 (app)
        run: |
          flake8 app
      - name: Run unit tests (con coverage para Sonar)
        env:
          PYTHONPATH: ${{ github.workspace }}/ms-admin
        run: |
          pytest tests/unit/
      - name: Sonar Scan (ms-admin)
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectBaseDir=${{ github.workspace }}/ms-admin

  # 4) Pruebas unitarias — ms-redirect
  test-ms-redirect:
    name: Pruebas unitarias · ms-redirect
    needs: changed
    if: needs.changed.outputs.ms_redirect == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ms-redirect
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ms-redirect/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Prettier (check)
        run: npm run format:check
      - name: ESLint
        run: npm run lint
      - name: Run unit tests (vitest)
        run: npm test --silent -- tests/unit
      - name: Run coverage (lcov) para Sonar
        run: |
          npm run coverage
      - name: Sonar Scan (ms-redirect)
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectBaseDir=${{ github.workspace }}/ms-redirect

  # 5) Mensaje si no hay nada que probar
  nothing-to-test:
    name: Pruebas unitarias · nada que ejecutar
    needs: changed
    if: needs.changed.outputs.frontend != 'true' &&
        needs.changed.outputs.ms_admin != 'true' &&
        needs.changed.outputs.ms_redirect != 'true'
    runs-on: ubuntu-latest
    steps:
      - run: echo "No changed projects. Skipping unit tests."

  # 6) Build Docker
  docker-build-push:
    name: Docker · build(+push) por servicio cambiado
    needs: [changed, test-frontend, test-ms-admin, test-ms-redirect]
    runs-on: ubuntu-latest
    
    # --- ¡CAMBIO CRÍTICO! ---
    # Esta condición 'if' es la solución.
    # 1. Se ejecuta si CUALQUIERA de los tests falló O se saltó (pero no falló).
    # 2. Y si al menos UN servicio cambió (para evitar correr si no cambió nada).
    if: |
      (
        (needs.test-frontend.result == 'success' || needs.test-frontend.result == 'skipped') &&
        (needs.test-ms-admin.result == 'success' || needs.test-ms-admin.result == 'skipped') &&
        (needs.test-ms-redirect.result == 'success' || needs.test-ms-redirect.result == 'skipped')
      ) && (
        needs.changed.outputs.frontend == 'true' ||
        needs.changed.outputs.ms_admin == 'true' ||
        needs.changed.outputs.ms_redirect == 'true'
      )
    # --- FIN DEL CAMBIO ---

    strategy:
      fail-fast: false
      matrix:
        include:
          - id: frontend
            changed: ${{ needs.changed.outputs.frontend }}
            context: frontend
            dockerfile: frontend/Dockerfile
            image_suffix: linkly-frontend
          - id: ms-admin
            changed: ${{ needs.changed.outputs.ms_admin }}
            context: ms-admin
            dockerfile: ms-admin/Dockerfile
            image_suffix: linkly-ms-admin
          - id: ms-redirect
            changed: ${{ needs.changed.outputs.ms_redirect }}
            context: ms-redirect
            dockerfile: ms-redirect/Dockerfile
            image_suffix: linkly-ms-redirect

    steps:
      - uses: actions/checkout@v4

      - name: Skip si este servicio no cambió
        id: skip
        run: |
          if [ "${{ matrix.changed }}" != "true" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        if: steps.skip.outputs.skip != 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.skip.outputs.skip != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.skip.outputs.skip != 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute image tags
        if: steps.skip.outputs.skip != 'true'
        id: meta
        run: |
          REPO="${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_suffix }}"
          echo "repo=${REPO}" >> $GITHUB_OUTPUT
          echo "sha_tag=${REPO}:${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "latest_tag=${REPO}:latest" >> $GITHUB_OUTPUT

      - name: Build (PR) / Build+Push (main)
        if: steps.skip.outputs.skip != 'true'
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.latest_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
