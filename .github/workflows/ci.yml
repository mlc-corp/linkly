name: CI monorepo — Unit · Docker build/push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # 1) Detecta qué paquetes cambiaron
  changed:
    name: Detectar cambios
    runs-on: ubuntu-latest
    outputs:
      frontend:  ${{ steps.filter.outputs.frontend }}
      ms_admin:  ${{ steps.filter.outputs.ms_admin }}
      ms_redirect: ${{ steps.filter.outputs.ms_redirect }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          base: ${{ github.event_name == 'push' && github.event.before || '' }}
          ref:  ${{ github.event_name == 'push' && github.sha || '' }}
          filters: |
            frontend:
              - 'frontend/**'
            ms_admin:
              - 'ms-admin/**'
            ms_redirect:
              - 'ms-redirect/**'
            # No incluimos readmes/infra para no disparar pruebas

  # 2) Tests — FRONTEND (Python/Flask + Gunicorn)
  test-frontend:
    name: Tests · frontend
    needs: changed
    if: needs.changed.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: frontend } }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: |
            frontend/requirements.txt
            frontend/requirements-dev.txt

      - name: Instalar deps
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -U pytest pytest-cov black flake8

      - name: Lint (Black)
        run: black --check .

      - name: Lint (Flake8)
        run: flake8 .

      - name: Unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}/frontend
        run: |
          pytest -q

  # 3) Tests — MS-ADMIN (Python/FastAPI)
  test-ms-admin:
    name: Tests · ms-admin
    needs: changed
    if: needs.changed.outputs.ms_admin == 'true'
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ms-admin } }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: |
            ms-admin/requirements.txt
            ms-admin/requirements-dev.txt

      - name: Instalar deps
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -U pytest pytest-cov black flake8

      - name: Lint (Black)
        run: black --check app

      - name: Lint (Flake8)
        run: flake8 app

      - name: Unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}/ms-admin
        run: pytest -q

  # 4) Tests — MS-REDIRECT (Node/Vitest)
  test-ms-redirect:
    name: Tests · ms-redirect
    needs: changed
    if: needs.changed.outputs.ms_redirect == 'true'
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ms-redirect } }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ms-redirect/package-lock.json

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Unit tests (Vitest)
        run: npm test --silent -- tests/unit

  # 5) Build Docker SIEMPRE (en PR sin push); Push SOLO en main
  docker-build-push:
    name: Docker · build(+push) por servicio cambiado
    needs: [changed, test-frontend, test-ms-admin, test-ms-redirect]
    runs-on: ubuntu-latest
    if: |
      needs.changed.outputs.frontend == 'true' ||
      needs.changed.outputs.ms_admin == 'true' ||
      needs.changed.outputs.ms_redirect == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: frontend
            changed: ${{ needs.changed.outputs.frontend }}
            context: frontend
            dockerfile: frontend/Dockerfile
            image_suffix: linkly-frontend
          - id: ms-admin
            changed: ${{ needs.changed.outputs.ms_admin }}
            context: ms-admin
            dockerfile: ms-admin/Dockerfile
            image_suffix: linkly-ms-admin
          - id: ms-redirect
            changed: ${{ needs.changed.outputs.ms_redirect }}
            context: ms-redirect
            dockerfile: ms-redirect/Dockerfile
            image_suffix: linkly-ms-redirect

    steps:
      - uses: actions/checkout@v4

      - name: Skip si este servicio no cambió
        id: skip
        run: |
          if [ "${{ matrix.changed }}" != "true" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          fi

      - uses: docker/setup-qemu-action@v3
        if: steps.skip.outputs.skip != 'true'

      - uses: docker/setup-buildx-action@v3
        if: steps.skip.outputs.skip != 'true'

      - name: Login Docker Hub (solo main)
        if: steps.skip.outputs.skip != 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        if: steps.skip.outputs.skip != 'true'
        id: meta
        run: |
          REPO="${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_suffix }}"
          echo "repo=${REPO}" >> $GITHUB_OUTPUT
          echo "sha_tag=${REPO}:${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "latest_tag=${REPO}:latest" >> $GITHUB_OUTPUT

      - name: Build (PR) / Build+Push (main)
        if: steps.skip.outputs.skip != 'true'
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.latest_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 6) Mensaje si no hay nada que probar
  nothing-to-test:
    name: Nada que ejecutar
    needs: changed
    if: needs.changed.outputs.frontend != 'true' &&
        needs.changed.outputs.ms_admin != 'true' &&
        needs.changed.outputs.ms_redirect != 'true'
    runs-on: ubuntu-latest
    steps:
      - run: echo "No changed projects. Skipping."
