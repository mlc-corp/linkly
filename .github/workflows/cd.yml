name: CD — Deploy Linkly a ECS

on:
  workflow_run:
    workflows: ["CI monorepo — Pruebas unitarias"]
    types: [completed]
  workflow_dispatch:

jobs:
  deploy-admin:
    runs-on: ubuntu-latest
    outputs:
      admin_url: ${{ steps.out.outputs.admin_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login a ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build y push imagen admin
        run: |
          IMAGE=${{ secrets.ECR_URI }}/linkly-admin:$(git rev-parse --short HEAD)
          docker build -t "$IMAGE" ./ms-admin
          docker push "$IMAGE"
          echo "IMAGE_URI=$IMAGE" >> $GITHUB_ENV

      - name: Desplegar CloudFormation (admin)
        id: deploy
        run: |
          STACK=linkly-admin
          aws cloudformation deploy \
            --stack-name $STACK \
            --template-file infra/linkly-service.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ServiceName=linkly-admin \
              ImageUri=$IMAGE_URI \
              ContainerPort=8080 \
              AdminApiUrl="" \
              BaseDomain=http://localhost:8081 \
              AppBaseUrl=http://localhost:5000
          ADMIN_URL=$(aws cloudformation describe-stacks --stack-name $STACK \
            --query "Stacks[0].Outputs[?OutputKey=='ServiceUrl'].OutputValue" --output text)
          echo "admin_url=$ADMIN_URL" >> $GITHUB_OUTPUT
      - id: out
        run: echo "admin_url=${{ steps.deploy.outputs.admin_url }}" >> $GITHUB_OUTPUT

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-admin
    steps:
      - uses: actions/checkout@v4

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login a ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build y push imagen frontend
        run: |
          IMAGE=${{ secrets.ECR_URI }}/linkly-frontend:$(git rev-parse --short HEAD)
          docker build -t "$IMAGE" ./frontend
          docker push "$IMAGE"
          echo "IMAGE_URI=$IMAGE" >> $GITHUB_ENV

      - name: Desplegar CloudFormation (frontend)
        run: |
          STACK=linkly-frontend
          ADMIN_URL=${{ needs.deploy-admin.outputs.admin_url }}
          aws cloudformation deploy \
            --stack-name $STACK \
            --template-file infra/linkly-service.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ServiceName=linkly-frontend \
              ImageUri=$IMAGE_URI \
              ContainerPort=5000 \
              AdminApiUrl=$ADMIN_URL \
              BaseDomain=http://localhost:8081 \
              AppBaseUrl=http://localhost:5000

  deploy-redirect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login a ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build y push imagen redirect
        run: |
          IMAGE=${{ secrets.ECR_URI }}/linkly-redirect:$(git rev-parse --short HEAD)
          docker build -t "$IMAGE" ./ms-redirect
          docker push "$IMAGE"
          echo "IMAGE_URI=$IMAGE" >> $GITHUB_ENV

      - name: Desplegar CloudFormation (redirect)
        run: |
          STACK=linkly-redirect
          aws cloudformation deploy \
            --stack-name $STACK \
            --template-file infra/linkly-service.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ServiceName=linkly-redirect \
              ImageUri=$IMAGE_URI \
              ContainerPort=8080 \
              AdminApiUrl="" \
              BaseDomain=http://localhost:8081 \
              AppBaseUrl=http://localhost:5000
