AWSTemplateFormatVersion: '2010-09-09'
Description: Linkly ECS Services - despliega frontend, admin y redirect en ECS Fargate

Parameters:
  Environment:
    Type: String
    AllowedValues: [staging, production]
    Default: staging
  LabRoleArn:
    Type: String
  DockerHubUser:
    Type: String
  RootDomain:
    Type: String
  AppDomain:
    Type: String
  AdminDomain:
    Type: String

Resources:
  # ======================================================
  # FRONTEND TASK
  # ======================================================
  FrontendTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub linkly-${Environment}-frontend
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref LabRoleArn
      TaskRoleArn: !Ref LabRoleArn
      ContainerDefinitions:
        - Name: frontend
          Image: !Sub "${DockerHubUser}/linkly-frontend:latest"
          PortMappings:
            - ContainerPort: 5000
          Environment:
            - Name: ADMIN_API_URL
              Value: !Sub "http://${AdminDomain}"
            - Name: BASE_DOMAIN
              Value: !Sub "http://${RootDomain}"
            - Name: APP_BASE_URL
              Value: !Sub "http://${AppDomain}"

  # ======================================================
  # ADMIN TASK
  # ======================================================
  AdminTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub linkly-${Environment}-admin
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref LabRoleArn
      TaskRoleArn: !Ref LabRoleArn
      ContainerDefinitions:
        - Name: admin
          Image: !Sub "${DockerHubUser}/linkly-ms-admin:latest"
          PortMappings:
            - ContainerPort: 8080
          Environment:
            - Name: DDB_TABLE
              Value: !ImportValue
                Fn::Sub: linkly-${Environment}-DynamoTable
            - Name: AWS_REGION
              Value: us-east-1
            - Name: PORT
              Value: "8080"

  # ======================================================
  # REDIRECT TASK
  # ======================================================
  RedirectTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub linkly-${Environment}-redirect
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref LabRoleArn
      TaskRoleArn: !Ref LabRoleArn
      ContainerDefinitions:
        - Name: redirect
          Image: !Sub "${DockerHubUser}/linkly-ms-redirect:latest"
          PortMappings:
            - ContainerPort: 8080
          Environment:
            - Name: DDB_TABLE
              Value: !ImportValue
                Fn::Sub: linkly-${Environment}-DynamoTable
            - Name: AWS_REGION
              Value: us-east-1
            - Name: PORT
              Value: "8080"

  # ======================================================
  # FRONTEND SERVICE
  # ======================================================
  FrontendService:
    Type: AWS::ECS::Service
    DependsOn: FrontendTask
    Properties:
      Cluster: !ImportValue
        Fn::Sub: linkly-${Environment}-Cluster
      TaskDefinition: !Ref FrontendTask
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue
                Fn::Sub: linkly-${Environment}-ServicesSg
          Subnets:
            Fn::Split:
              - ","
              - Fn::ImportValue: !Sub linkly-${Environment}-PublicSubnets
      LoadBalancers:
        - ContainerName: frontend
          ContainerPort: 5000
          TargetGroupArn: !ImportValue
            Fn::Sub: linkly-${Environment}-TgFrontend

  # ======================================================
  # ADMIN SERVICE
  # ======================================================
  AdminService:
    Type: AWS::ECS::Service
    DependsOn: AdminTask
    Properties:
      Cluster: !ImportValue
        Fn::Sub: linkly-${Environment}-Cluster
      TaskDefinition: !Ref AdminTask
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue
                Fn::Sub: linkly-${Environment}-ServicesSg
          Subnets:
            Fn::Split:
              - ","
              - Fn::ImportValue: !Sub linkly-${Environment}-PublicSubnets
      LoadBalancers:
        - ContainerName: admin
          ContainerPort: 8080
          TargetGroupArn: !ImportValue
            Fn::Sub: linkly-${Environment}-TgAdmin

  # ======================================================
  # REDIRECT SERVICE
  # ======================================================
  RedirectService:
    Type: AWS::ECS::Service
    DependsOn: RedirectTask
    Properties:
      Cluster: !ImportValue
        Fn::Sub: linkly-${Environment}-Cluster
      TaskDefinition: !Ref RedirectTask
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue
                Fn::Sub: linkly-${Environment}-ServicesSg
          Subnets:
            Fn::Split:
              - ","
              - Fn::ImportValue: !Sub linkly-${Environment}-PublicSubnets
      LoadBalancers:
        - ContainerName: redirect
          ContainerPort: 8080
          TargetGroupArn: !ImportValue
            Fn::Sub: linkly-${Environment}-TgRedirect

Outputs:
  FrontendServiceName:
    Value: !Ref FrontendService
    Export:
      Name: !Sub "linkly-${Environment}-FrontendService"

  AdminServiceName:
    Value: !Ref AdminService
    Export:
      Name: !Sub "linkly-${Environment}-AdminService"

  RedirectServiceName:
    Value: !Ref RedirectService
    Export:
      Name: !Sub "linkly-${Environment}-RedirectService"